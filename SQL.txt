SVspring.application.name=restapi

Comando para correr la Api: mvnw.cmd spring-boot:run

FALTA AGREGAR IMAGEN EN USUARIO  
FALTA AJUSTAR CATEGORIA PARA LOS USUARIOS Y RECURSOS
FALTA PLANTEAR LA INTERFAZ DE RECURSOS
FALTA ENLAZAR VALORES DEL FORMULARIO CON PROVEEDORES
Gráfico de Torta/Pastel: Proporción de Pedidos por Estado para PEDIDOS ADMIN
Pedidos por Área: Un gráfico de barras verticales que muestra el número de pedidos realizados por cada área del colegio. PEDIDOS ADMIN
-- Crear tablas


CREATE TABLE area_trabajo (
    id_area_trabajo INT IDENTITY PRIMARY KEY,
    nombre_area VARCHAR(255),
    descripcion VARCHAR(255)
);

CREATE TABLE categoria (
    id_categoria INT IDENTITY PRIMARY KEY,
    descripcion VARCHAR(255)
);

CREATE TABLE usuario (
    id_usuario INT IDENTITY PRIMARY KEY,
    nombre_usuario VARCHAR(255),
    tipo_usuario VARCHAR(255),
    contrasena VARCHAR(255),
    nombre VARCHAR(255),
    apellido VARCHAR(255),
    email VARCHAR(255),
    rut VARCHAR(255),
    id_area_trabajo INT,
    FOREIGN KEY (id_area_trabajo) REFERENCES area_trabajo(id_area_trabajo)
);

CREATE TABLE compra (
    id_compra INT PRIMARY KEY IDENTITY,
    producto NVARCHAR(255) NOT NULL,
    fecha DATETIME NOT NULL,
    compra_total DECIMAL(10, 2) NOT NULL
);


CREATE TABLE recurso (
    id_recurso INT IDENTITY PRIMARY KEY,
    nombre VARCHAR(255),
    descripcion VARCHAR(255),
    cantidad INT,
    fecha_ingreso DATETIME,
    id_area_trabajo INT,
    id_categoria INT,
    FOREIGN KEY (id_area_trabajo) REFERENCES area_trabajo(id_area_trabajo),
    FOREIGN KEY (id_categoria) REFERENCES categoria(id_categoria)
);

CREATE TABLE pedido (
    id_pedido INT IDENTITY PRIMARY KEY,
    fecha_creacion DATETIME,
    nombre_producto VARCHAR(255),
    descripcion VARCHAR(255),
    fecha_ingreso DATETIME,
    cantidad INT,
    observaciones VARCHAR(255),
    proveedor VARCHAR(255),
    precio_unitario DECIMAL(10, 2),
    id_usuario INT,
    FOREIGN KEY (id_usuario) REFERENCES usuario(id_usuario)
);

CREATE TABLE Proveedor (
    id INT PRIMARY KEY IDENTITY(1,1),
    razon_social VARCHAR(255) NOT NULL,
    codigo_tributario VARCHAR(100) NOT NULL,
    direccion VARCHAR(255),
    email VARCHAR(255),
    telefono VARCHAR(50)
);





